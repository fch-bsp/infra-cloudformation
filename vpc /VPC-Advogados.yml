AWSTemplateFormatVersion: '2010-09-09'
Description: VPC and subnets classe B
Parameters:
  EnvironmentName:
    Type: String
    Default: vpc-cliente
Mappings:
  SubnetConfig:
    VPC:
      CIDR: '172.16.0.0/16'
    PublicOne:
      CIDR: '172.16.1.0/24'
    PublicTwo:
      CIDR: '172.16.2.0/24'
    PublicThree:
      CIDR: '172.16.3.0/24'
    PublicFour:
      CIDR: '172.16.4.0/24'
    PublicFive:
      CIDR: '172.16.5.0/24'      
# Criação da VPC 
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap ['SubnetConfig', 'VPC', 'CIDR']
# Criação da Subnet 01
  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicOne', 'CIDR']
      MapPublicIpOnLaunch: true
# Criação da Subnet 02
  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 1
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicTwo', 'CIDR']
      MapPublicIpOnLaunch: true
# Criação da Subnet 03
  PublicSubnetThree:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicThree', 'CIDR']
      MapPublicIpOnLaunch: true
# Criação da Subnet 04
  PublicSubnetFour:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 1
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicFour', 'CIDR']
      MapPublicIpOnLaunch: true    
# Criação da Subnet 05
  PublicSubnetFive:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref 'VPC'
      CidrBlock: !FindInMap ['SubnetConfig', 'PublicFive', 'CIDR']
      MapPublicIpOnLaunch: true    
# Criação do IG E RT
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  GatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'InternetGateway'
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachement
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'InternetGateway'
# Ass RT e IG Subnet 01
  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetOne
      RouteTableId: !Ref PublicRouteTable
# Ass RT e IG Subnet 02
  PublicSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetTwo
      RouteTableId: !Ref PublicRouteTable
# Ass RT e IG Subnet 03
  PublicSubnetThreeRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetThree
      RouteTableId: !Ref PublicRouteTable
# Ass RT e IG Subnet 04
  PublicSubnetFourRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetFour
      RouteTableId: !Ref PublicRouteTable
# Ass RT e IG Subnet 05
  PublicSubnetFiveRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetFive
      RouteTableId: !Ref PublicRouteTable        
      

Outputs:
  VpcId:
    Description: O ID da VPC em que esta stack está implantada
    Value: !Ref 'VPC'
    Export:
      Name: !Sub ${EnvironmentName}:VpcId

  PublicSubnetOne:
    Description: Public subnet one
    Value: !Ref 'PublicSubnetOne'
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnetOne

  PublicSubnetTwo:
    Description: Public subnet two
    Value: !Ref 'PublicSubnetTwo'
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnetTwo

  PublicSubnetThree:
    Description: Public subnet three
    Value: !Ref 'PublicSubnetThree'
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnetThree

  PublicSubnetFour:
    Description: Public subnet four
    Value: !Ref 'PublicSubnetFour'
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnetFour

  PublicSubnetFive:
    Description: Public subnet five
    Value: !Ref 'PublicSubnetFive'
    Export:
      Name: !Sub ${EnvironmentName}:PublicSubnetFive            
